version: 2.1

parameters:
  action:
    type: enum
    enum: [oncommit, docker]
    default: oncommit

  docker_img_version:
    type: string
    # Remember to also update `docker/build-all.sh`
    default: "1.4.2"

workflows:
  test-jobs:
    when:
      equal: [oncommit, << pipeline.parameters.action >>]
    jobs:
      - cpp-tests:
          context:
            - ghcr-auth
      - py-tests:
          context:
            - ghcr-auth

  docker-publish-jobs:
    when:
      equal: [docker, << pipeline.parameters.action >>]
    jobs:
      - docker-publish:
          context:
            - ghcr-auth

commands:
  build-polygames:
    steps:
      - run:
          name: Build Polygames with the same options as the Docker image
          command: |
            cd build
            make -j4 --debug=b # Limit concurrent jobs to limit memory use
  checkout-without-force:
    # This massive hack lets us not recompile the program every time. Remove the --force argument from `git checkout` below.
    steps:
      - run:
          name: (From CircleCI -checkout command) SSH keys and known_hosts, then fetch repository
          command: |
            export SSH_CONFIG_DIR="${HOME}/.ssh"
            mkdir -p "$SSH_CONFIG_DIR"
            chmod 0700 "$SSH_CONFIG_DIR"
            printf "%s" 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
            github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
            github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
            bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
            gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
            ' >> "$SSH_CONFIG_DIR/known_hosts"
            chmod 0600 "$SSH_CONFIG_DIR/known_hosts"
            rm -f "$SSH_CONFIG_DIR/id_rsa"
            printf "%s" "$CHECKOUT_KEY" > "$SSH_CONFIG_DIR/id_rsa"
            chmod 0600 "$SSH_CONFIG_DIR/id_rsa"

            export GIT_SSH_COMMAND='ssh -i "$SSH_CONFIG_DIR/id_rsa" -o UserKnownHostsFile="$SSH_CONFIG_DIR/known_hosts"'

            # use git+ssh instead of https
            git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
            git config --global gc.auto 0 || true

            # Set URL to SSH in the project dir
            cd '/home/circleci/project'
            git remote set-url origin "$CIRCLE_REPOSITORY_URL" || true

            git fetch --force origin --depth 10 +refs/heads/$CIRCLE_BRANCH:refs/remotes/origin/$CIRCLE_BRANCH

            # Removes --force compared to original
            git checkout -B "$CIRCLE_BRANCH" "$CIRCLE_SHA1"
            git --no-pager log --no-color -n 1 --format='HEAD is now at %h %s'

jobs:
  cpp-tests:
    docker:
      - image: ghcr.io/alignmentresearch/polygames:<< pipeline.parameters.docker_img_version >>-ci-sanitize
        auth:
          username: "$GHCR_DOCKER_USER"
          password: "$GHCR_DOCKER_TOKEN"
    resource_class: large  # Needs to be large to have enough RAM
    steps:
      - checkout-without-force
      - build-polygames
      - run:
          name: C++ tests
          command: |
            cd ./build/tests
            ctest --parallel 4 --output-on-failure --output-junit junit.xml
      # Report test results to CircleCI from junit.xml
      - store_test_results:
          path: ./build/tests
  py-tests:
    docker:
      - image: ghcr.io/alignmentresearch/polygames:<< pipeline.parameters.docker_img_version >>-ci-relwithdebinfo
        auth:
          username: "$GHCR_DOCKER_USER"
          password: "$GHCR_DOCKER_TOKEN"
    resource_class: large  # Needs to be large to have enough RAM
    steps:
      - checkout-without-force
      - run:
          name: Check formatting
          command: |
            black --check .
      - build-polygames
      - run:
          name: Install Pytube
          command: |
            pip install -e src/tube
      - run:
          name: Python tests
          command: |
              pytest pypolygames --durations=10 --verbose --junitxml=python/junit.xml
      # - run: TODO restore
      #     name: Run training
      #     command: |
      #         python -m pypolygames traineval --act_batchsize=2 \
      #           --batchsize=2 --replay_capacity=16  --replay_warmup=2 \
      #           --num_epoch=1 --num_game=2 --model_name=NanoFCLogitModel \
      #           --epoch_len=1 --game_name=TicTacToe --sync_period=1  --device_eval=cpu \
      #           --num_actor_eval=2 --num_rollouts_opponent=50 --num_game_eval=4 \
      #           --devices="cpu"
      - store_test_results:
          path: ./python
      - run:
          name: Check Docker container version
          command: |
            export CIRCLECI_DOCKER_IMG_VERSION="<< pipeline.parameters.docker_img_version >>"
            sh docker/build-all.sh


  docker-publish:
    docker:
      - image: cimg/base:2023.04-22.04
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: true
      - run: |
          git clean -fdx
          echo "$GHCR_DOCKER_TOKEN" | docker login -u "$GHCR_DOCKER_USER" --password-stdin ghcr.io
          ./docker/build-all.sh
