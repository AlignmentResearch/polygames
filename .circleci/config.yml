version: 2.1

parameters:
  action:
    type: enum
    enum: [oncommit, docker]
    default: oncommit

  docker_img_version:
    type: string
    default: "0.1"

workflows:
  test-jobs:
    when:
      equal: [oncommit, << pipeline.parameters.action >>]
    jobs:
      - all-tests:
          context:
            - ghcr-auth

  docker-publish-jobs:
    when:
      equal: [docker, << pipeline.parameters.action >>]
    jobs:
      - docker-publish:
          context:
            - ghcr-auth
            # TODO: this won't work because the current token, connected to the `rhaps0dy` account, only has read permissions.

commands:
  build-polygames:
    steps:
      - run:
          name: Build Polygames in debug
          command: |
            cd build
            CC=/usr/bin/clang CXX=/usr/bin/clang++ cmake .. -DCMAKE_BUILD_TYPE=debug -DPYTORCH15=ON -DWITH_LUDII=OFF -DPOLYGAMES_WITH_CUDA=OFF
            make -j

jobs:
  all-tests:
    docker:
      - image: ghcr.io/alignmentresearch/polygames-circleci:<< pipeline.parameters.docker_img_version >>
        auth:
          username: "$GHCR_DOCKER_USER"
          password: "$GHCR_DOCKER_TOKEN"
    resource_class: medium
    steps:
      - checkout
      - build-polygames
      - run:
          name: Test games
          command: ./build/test_state
      - run:
          name: Test polygames-tests (unit tests)
          command: ./build/polygames-tests

      - run:
          name: Test MCTS
          command: |
              ./build/src/mcts/test_mcts 1 100
              ./build/src/mcts/test_mcts 4 50
      - run:
          name: Test python
          command: |
              pytest pypolygames --durations=10 --verbose
      - run:
          name: Run training
          command: |
              python -m pypolygames traineval --act_batchsize=2 \
                  --batchsize=2 --replay_capacity=16  --replay_warmup=2 \
                  --num_epoch=1 --num_game=12 --model_name=NanoFCLogitModel \
                  --epoch_len=1 --device=cpu --game_name=TicTacToe --sync_period=1  --device_eval=cpu \
                  --num_actor_eval=2 --num_rollouts_opponent=50 --num_game_eval=4

  docker-publish:
    docker:
      - image: cimg/python:3.10.6
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run: |
          TAG="ghcr.io/alignmentresearch/polygames-circleci:<< pipeline.parameters.docker_img_version >>"
          docker build -f .circleci/Dockerfile -t "$TAG" .
          echo "$GHCR_DOCKER_TOKEN" | docker login -u "$GHCR_DOCKER_USER" --password-stdin
          docker push "$TAG"
